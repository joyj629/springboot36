<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ksmart36.mybatis.mapper.MemberMapper">
	<resultMap type="Member" id="memberResultMap">
		<result column="m_id" 		property="memberId"/>
		<result column="m_pw" 		property="memberPw"/>
		<result column="m_name" 	property="memberName"/>
		<result column="m_level" 	property="memberLevel"/>
		<result column="m_email" 	property="memberEmail"/>
		<result column="m_addr" 	property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
	</resultMap>
	<select id="getLoginCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tb_login;
	</select>
	<select id="getLoginHistory" resultType="hashmap" parameterType="map">
		SELECT
			 login.rowNum	AS rowNum
			,login.login_id		AS loginId
			,login.login_date		AS loginDate
			,login.logout_date	AS logoutDate
		FROM 
			(SELECT
				(@rowNum := @rowNum+1) AS rowNum
				,l.login_id
				,l.login_date
				,l.logout_date
			FROM
				tb_login AS l
				JOIN
				(SELECT @rowNum:=0) AS r
			ORDER BY l.login_date DESC) AS login
		LIMIT #{startRow},#{rowPerPage};
	</select>
	<select id="getSearchMemberList" parameterType="String" resultMap="memberResultMap">
		SELECT 
			 m_id		
			,m_pw		
			,m_name		
			,m_level	
			,m_email	
			,m_addr		
			,m_reg_date	
		FROM tb_member
		WHERE 
			${sk} Like CONCAT('%',#{sv},'%')
	</select>
	<delete id="removeLogin" parameterType="String">
		DELETE 
		FROM tb_login
		WHERE  
			<if test="memberId != null and memberId neq ''.toString()"> 
		 	   login_id=#{memberId}
		 	</if>
	</delete>
	<select id="getGoodsCodeById" parameterType="String" resultType="hashMap"> <!-- java.util.hashMap -->
		SELECT 
			 g_code		AS goodsCode
		FROM 
			tb_goods
		WHERE 
			g_seller_id = #{memberId}	
		
	</select>
	<delete id="removeOrder" parameterType="String">
		DELETE 
		FROM tb_order
		<trim prefix="WHERE" suffixOverrides="AND |OR">  
			<foreach collection="goodsCodeList" item="item" separator="OR">
				<if test="item.goodsCode != null and item.goodsCode  neq ''.toString()"> 
			 		o_g_code=#{item.goodsCode}
			 	</if>				
			</foreach>
		</trim>		
				
	</delete>
	<delete id="removeGoods" parameterType="String"> <!-- 내가 받을 타입을 파라타입 -->
		DELETE 
		FROM tb_goods 
		WHERE  
			<if test="memberId != null and memberId neq ''.toString()"> 
		 	   g_seller_id=#{memberId}
		 	</if>
	</delete>
	<delete id="removeMember" parameterType="String"> <!-- 내가 받을 타입을 파라타입 -->
		DELETE 
		FROM tb_member 
		WHERE  
			<if test="memberId != null and memberId neq ''.toString()"> 
		 	   m_id=#{memberId}
		 	</if>
	</delete>
	<update id="modifyMember" parameterType="Member">
			UPDATE tb_member				
		<trim prefix="SET" suffixOverrides=",">  
			<if test="memberPw != null and memberPw neq ''.toString()"> <!-- ne = != -->
		 	   m_pw = #{memberPw},
		 	</if>
			<if test="memberName != null and memberName neq ''.toString()" >
		 	   m_name = #{memberName},
		 	</if>
			<if test="memberLevel != null and memberLevel neq ''.toString()">
		 	   m_level = #{memberLevel},
		 	</if>
			<if test="memberEmail != null and memberEmail neq ''.toString()">
		 	   m_email = #{memberEmail},
		 	</if>
			<if test="memberAddr != null and memberAddr neq ''.toString()">
		 	   m_addr = #{memberAddr}
		 	</if>			
		</trim>
				WHERE 
					m_id = #{memberId}
<!-- 		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			UPDATE tb_member
				SET
					<if test="memberPw != null and memberPw ne ''.toString()"> ne = !=
				 	   AND m_pw like #{memberPw}
				 	</if>
					<if test="memberName != null and memberName ne ''.toString()" >
				 	   AND m_name like #{memberName}
				 	</if>
					<if test="memberLevel != null and memberLevel ne ''.toString()">
				 	   AND m_level like #{memberLevel}
				 	</if>
					<if test="memberEmail != null and memberEmail ne ''.toString()">
				 	   AND m_email like #{memberEmail}
				 	</if>
					<if test="memberAddr != null and memberAddr ne ''.toString()">
				 	   AND m_addr like #{memberAddr}
				 	</if>			
				WHERE 
					m_id = #{memberId}  
		</trim> -->
	</update>
	<select id="getMemberById" parameterType="String" resultType="Member">
	SELECT 
		 m_id		AS memberId
		,m_pw		AS memberPw
		,m_name		AS memberName
		,m_level	AS memberLevel
		,m_email	AS memberEmail
		,m_addr		AS memberAddr
		,m_reg_date	AS memberRegDate
	FROM 
		tb_member
	WHERE 
		m_id = #{memberId}	
		
	</select>
	<insert id="addMember" parameterType="Member">
	INSERT INTO tb_member(
		 m_id
		,m_pw
		,m_name
		,m_level
		,m_email
		,m_addr
		,m_reg_date
		)VALUES(
			 #{memberId}
			,#{memberPw}
			,#{memberName}
			,4
			,#{memberEmail}
			,#{memberAddr}
			,NOW()
		)
	
	</insert>

				<!-- 추상메서드     / application.properties-> ksmart36.mybatis.domain. 생략가능 -->
	<select id="getMemberList" resultType="Member">
		SELECT 
			 m_id		AS memberId
			,m_pw		AS memberPw
			,m_name		AS memberName
			,m_level	AS memberLevel
			,m_email	AS memberEmail
			,m_addr		AS memberAddr
			,m_reg_date	AS memberRegDate
		FROM 
			tb_member
	</select>
</mapper>